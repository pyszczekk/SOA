
package pl.edu.agh.soa.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentService", targetNamespace = "http://soap.soa.agh.edu.pl/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentService {


    /**
     * 
     * @param studentId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.DeleteStudent")
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.DeleteStudentResponse")
    public String deleteStudent(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId);

    /**
     * 
     * @param studentId
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudentCourses", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentCourses")
    @ResponseWrapper(localName = "getStudentCoursesResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentCoursesResponse")
    public List<String> getStudentCourses(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId);

    /**
     * 
     * @param studentId
     * @return
     *     returns pl.edu.agh.soa.soap.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudent", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudent")
    @ResponseWrapper(localName = "getStudentResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentResponse")
    public Student getStudent(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId);

    /**
     * 
     * @param fieldOfStudy
     * @return
     *     returns java.util.List<pl.edu.agh.soa.soap.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudentsFromSameField", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentsFromSameField")
    @ResponseWrapper(localName = "getStudentsFromSameFieldResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentsFromSameFieldResponse")
    public List<Student> getStudentsFromSameField(
        @WebParam(name = "fieldOfStudy", targetNamespace = "")
        String fieldOfStudy);

    /**
     * 
     * @param studentId
     * @param course
     * @return
     *     returns pl.edu.agh.soa.soap.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteCourseFromStudent", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.DeleteCourseFromStudent")
    @ResponseWrapper(localName = "deleteCourseFromStudentResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.DeleteCourseFromStudentResponse")
    public Student deleteCourseFromStudent(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId,
        @WebParam(name = "course", targetNamespace = "")
        String course);

    /**
     * 
     * @param faculty
     * @return
     *     returns java.util.List<pl.edu.agh.soa.soap.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudentsFromSameFaculty", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentsFromSameFaculty")
    @ResponseWrapper(localName = "getStudentsFromSameFacultyResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetStudentsFromSameFacultyResponse")
    public List<Student> getStudentsFromSameFaculty(
        @WebParam(name = "faculty", targetNamespace = "")
        String faculty);

    /**
     * 
     * @param studentId
     * @param course
     * @return
     *     returns pl.edu.agh.soa.soap.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCourseToStudent", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.AddCourseToStudent")
    @ResponseWrapper(localName = "addCourseToStudentResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.AddCourseToStudentResponse")
    public Student addCourseToStudent(
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId,
        @WebParam(name = "course", targetNamespace = "")
        String course);

    /**
     * 
     * @param studentId
     * @param lastName
     * @param name
     * @param fieldOfStudy
     * @param faculty
     * @return
     *     returns pl.edu.agh.soa.soap.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.AddStudentResponse")
    public Student addStudent(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "faculty", targetNamespace = "")
        String faculty,
        @WebParam(name = "fieldOfStudy", targetNamespace = "")
        String fieldOfStudy,
        @WebParam(name = "studentId", targetNamespace = "")
        int studentId);

    /**
     * 
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvatar", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetAvatar")
    @ResponseWrapper(localName = "getAvatarResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetAvatarResponse")
    public byte[] getAvatar();

    /**
     * 
     * @return
     *     returns java.util.List<pl.edu.agh.soa.soap.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllStudents", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetAllStudents")
    @ResponseWrapper(localName = "getAllStudentsResponse", targetNamespace = "http://soap.soa.agh.edu.pl/", className = "pl.edu.agh.soa.soap.GetAllStudentsResponse")
    public List<Student> getAllStudents();

}
